/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.ui;

import com.sun.tools.javac.Main;
import org.example.files.ActiveSession;
import org.example.mvc.Controller;

import javax.swing.*;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author PC-LORENZO
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        Controller.logIn(this);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        settings = new javax.swing.JMenu();
        logOut = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        tournament = new javax.swing.JMenu();
        inspectTournaments = new javax.swing.JMenuItem();
        createTournaments = new javax.swing.JMenuItem();
        myTournaments = new javax.swing.JMenuItem();
        teams = new javax.swing.JMenu();
        inspectTeams = new javax.swing.JMenuItem();
        createTeams = new javax.swing.JMenuItem();
        myTeams = new javax.swing.JMenuItem();
        players = new javax.swing.JMenu();
        allPlayers = new javax.swing.JMenuItem();
        myProfile = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1920, 1080));
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\ChampionForge\\src\\icons\\uiMenu\\bg.png")); // NOI18N

        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        menuBar.setBackground(new java.awt.Color(0, 0, 0));
        menuBar.setForeground(new java.awt.Color(204, 204, 204));
        menuBar.setToolTipText("");
        menuBar.setBorderPainted(false);
        menuBar.setFont(new java.awt.Font("Chailce-Noggin", 0, 14)); // NOI18N

        settings.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\ChampionForge\\src\\icons\\uiMenu\\logo (2).png")); // NOI18N
        settings.setText("      ");
        settings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settings.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        settings.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        settings.setIconTextGap(-100);
        settings.setInheritsPopupMenu(true);

        logOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        logOut.setFont(new java.awt.Font("Lora", 1, 18)); // NOI18N
        logOut.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\ChampionForge\\src\\icons\\uiMenu\\logout.png")); // NOI18N
        logOut.setText("LOG OUT");
        logOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        settings.add(logOut);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exit.setFont(new java.awt.Font("Lora", 1, 18)); // NOI18N
        exit.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\ChampionForge\\src\\icons\\uiMenu\\exit.png")); // NOI18N
        exit.setText("EXIT");
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        settings.add(exit);

        menuBar.add(settings);

        tournament.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\ChampionForge\\src\\icons\\uiMenu\\tournaments.png")); // NOI18N
        tournament.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tournament.setEnabled(false);
        tournament.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tournament.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        inspectTournaments.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        inspectTournaments.setForeground(new java.awt.Color(255, 157, 0));
        inspectTournaments.setText("ALL TOURNAMENTS");
        inspectTournaments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inspectTournamentsActionPerformed(evt);
            }
        });
        tournament.add(inspectTournaments);

        createTournaments.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        createTournaments.setForeground(new java.awt.Color(255, 157, 0));
        createTournaments.setText("CREATE");
        createTournaments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTournamentsActionPerformed(evt);
            }
        });
        tournament.add(createTournaments);

        myTournaments.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        myTournaments.setForeground(new java.awt.Color(255, 157, 0));
        myTournaments.setText("MY TOURNAMENTS");
        myTournaments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myTournamentsActionPerformed(evt);
            }
        });
        tournament.add(myTournaments);

        menuBar.add(tournament);

        teams.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\ChampionForge\\src\\icons\\uiMenu\\teams.png")); // NOI18N
        teams.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        teams.setEnabled(false);

        inspectTeams.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        inspectTeams.setForeground(new java.awt.Color(255, 157, 0));
        inspectTeams.setText("ALL TEAMS");
        inspectTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inspectTeamsActionPerformed(evt);
            }
        });
        teams.add(inspectTeams);

        createTeams.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        createTeams.setForeground(new java.awt.Color(255, 157, 0));
        createTeams.setText("CREATE");
        createTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTeamsActionPerformed(evt);
            }
        });
        teams.add(createTeams);

        myTeams.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        myTeams.setForeground(new java.awt.Color(255, 157, 0));
        myTeams.setText("MY TEAMS");
        myTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myTeamsActionPerformed(evt);
            }
        });
        teams.add(myTeams);

        menuBar.add(teams);

        players.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\ChampionForge\\src\\icons\\uiMenu\\players.png")); // NOI18N
        players.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        players.setEnabled(false);

        allPlayers.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        allPlayers.setForeground(new java.awt.Color(255, 157, 0));
        allPlayers.setText("ALL PLAYERS");
        allPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allPlayersActionPerformed(evt);
            }
        });
        players.add(allPlayers);

        myProfile.setFont(new java.awt.Font("Lora", 1, 14)); // NOI18N
        myProfile.setForeground(new java.awt.Color(255, 157, 0));
        myProfile.setText("MY PROFILE");
        myProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myProfileActionPerformed(evt);
            }
        });
        players.add(myProfile);

        menuBar.add(players);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        // TODO add your handling code here:
        Controller.logout(this);
        Controller.logIn(this);
    }//GEN-LAST:event_logOutActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        Controller.desconection();
    }//GEN-LAST:event_exitActionPerformed

    private void inspectTournamentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inspectTournamentsActionPerformed
        // TODO add your handling code here:
        Controller.tournamentView(this,Controller.getTournaments());
    }//GEN-LAST:event_inspectTournamentsActionPerformed

    private void inspectTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inspectTeamsActionPerformed
        // TODO add your handling code here:
        Controller.teamView(this,Controller.getTeams(), false,null);
    }//GEN-LAST:event_inspectTeamsActionPerformed

    private void allPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allPlayersActionPerformed
        // TODO add your handling code here:
        Controller.playerView(this);
    }//GEN-LAST:event_allPlayersActionPerformed

    private void myProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myProfileActionPerformed
        // TODO add your handling code here:
        Controller.playerProfile(this,Controller.queryPlayer(Integer.parseInt(ActiveSession.leerArchivo())));
    }//GEN-LAST:event_myProfileActionPerformed

    private void createTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTeamsActionPerformed
        // TODO add your handling code here:
        Controller.teamCreation(this);
    }//GEN-LAST:event_createTeamsActionPerformed

    private void myTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myTeamsActionPerformed
        // TODO add your handling code here:
        Controller.teamView(this,Controller.getTeamsFromPlayer(Controller.queryPlayer(Integer.parseInt(ActiveSession.leerArchivo()))),false,null);
    }//GEN-LAST:event_myTeamsActionPerformed

    private void createTournamentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTournamentsActionPerformed
        // TODO add your handling code here:
        Controller.tournamentCreation(this);
    }//GEN-LAST:event_createTournamentsActionPerformed

    private void myTournamentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myTournamentsActionPerformed
        // TODO add your handling code here:
        Controller.tournamentView(this,Controller.getTournamentsFromPlayer(Controller.queryPlayer(Integer.parseInt(ActiveSession.leerArchivo()))));
    }//GEN-LAST:event_myTournamentsActionPerformed


    public static void launch() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem allPlayers;
    private javax.swing.JMenuItem createTeams;
    private javax.swing.JMenuItem createTournaments;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenuItem inspectTeams;
    private javax.swing.JMenuItem inspectTournaments;
    public javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem logOut;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem myProfile;
    private javax.swing.JMenuItem myTeams;
    private javax.swing.JMenuItem myTournaments;
    public javax.swing.JMenu players;
    private javax.swing.JMenu settings;
    public javax.swing.JMenu teams;
    public javax.swing.JMenu tournament;
    // End of variables declaration//GEN-END:variables
}
